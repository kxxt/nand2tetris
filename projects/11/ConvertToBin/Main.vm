
function Main.main 2
push constant 8000
push constant 12
call Memory.poke 2
pop temp 3
push constant 8001
push constant 16

push constant 1
neg
call Main.fillMemory 3
pop temp 3
push constant 8000
call Memory.peek 1
pop local 0
push local 0
call Main.convert 1
pop temp 3
push constant 16
pop local 1
label Main.LABEL.0
push local 1
push constant 0
gt
not
if-goto Main.LABEL.1
push constant 8000
push local 1
add
call Memory.peek 1
call Output.printInt 1
pop temp 3
push local 1
push constant 1
sub
pop local 1
goto Main.LABEL.0
label Main.LABEL.1
push constant 0
return
function Main.convert 3
push constant 0
not
pop local 2
label Main.LABEL.2
push local 2
not
if-goto Main.LABEL.3
push local 1
push constant 1
add
pop local 1
push local 0
call Main.nextMask 1
pop local 0

push local 1
push constant 16
gt
not
not
if-goto Main.LABEL.4

push argument 0
push local 0
and
push constant 0
eq
not
not
if-goto Main.LABEL.6
push constant 8000
push local 1
add
push constant 1
call Memory.poke 2
pop temp 3
goto Main.LABEL.7
label Main.LABEL.6
push constant 8000
push local 1
add
push constant 0
call Memory.poke 2
pop temp 3
label Main.LABEL.7
goto Main.LABEL.5
label Main.LABEL.4
push constant 0
pop local 2
label Main.LABEL.5
goto Main.LABEL.2
label Main.LABEL.3
push constant 0
return
function Main.nextMask 0
push argument 0
push constant 0
eq
not
if-goto Main.LABEL.8
push constant 1
return
goto Main.LABEL.9
label Main.LABEL.8
push argument 0
push constant 2
call Math.multiply 2
return
label Main.LABEL.9
function Main.fillMemory 0
label Main.LABEL.10
push argument 1
push constant 0
gt
not
if-goto Main.LABEL.11
push argument 0
push argument 2
call Memory.poke 2
pop temp 3
push argument 1
push constant 1
sub
pop argument 1
push argument 0
push constant 1
add
pop argument 0
goto Main.LABEL.10
label Main.LABEL.11
push constant 0
return